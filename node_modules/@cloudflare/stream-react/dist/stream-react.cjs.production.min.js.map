{"version":3,"file":"stream-react.cjs.production.min.js","sources":["../src/useStreamSDK.ts","../src/Stream.tsx","../src/useIframeSrc.tsx","../src/validSrcUrl.ts"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst sdkScriptLocation =\n  \"https://embed.cloudflarestream.com/embed/sdk.latest.js\";\n\n// This needs to be wrapped as such for two reasons:\n// - Stream is a function, and useState invokes functions immediately and uses the return value.\n// - We need to check typeof on window to ensure safety for server side rendering.\nexport const safelyAccessStreamSDK = () => {\n  if (typeof window === \"undefined\") return undefined;\n  return window.Stream;\n};\n\nexport function useStreamSDK() {\n  const [streamSdk, setStreamSdk] = useState(safelyAccessStreamSDK);\n\n  useEffect(() => {\n    if (!streamSdk) {\n      const existingScript = document.querySelector<HTMLScriptElement>(\n        `script[src='${sdkScriptLocation}']`\n      );\n      const script = existingScript ?? document.createElement(\"script\");\n      script.addEventListener(\"load\", () => {\n        setStreamSdk(safelyAccessStreamSDK);\n      });\n      if (!existingScript) {\n        script.src = sdkScriptLocation;\n        document.head.appendChild(script);\n      }\n    }\n  }, [streamSdk]);\n\n  return streamSdk;\n}\n","import React, {\n  useRef,\n  useEffect,\n  RefObject,\n  FC,\n  useState,\n  CSSProperties,\n  useMemo,\n  MutableRefObject,\n} from \"react\";\nimport { StreamPlayerApi, StreamProps, VideoDimensions } from \"./types\";\nimport { useStreamSDK, safelyAccessStreamSDK } from \"./useStreamSDK\";\nimport { useIframeSrc } from \"./useIframeSrc\";\nimport { validSrcUrl } from \"./validSrcUrl\";\n\n/**\n * Hook for syncing properties to the SDK api when they change\n */\nfunction useProperty<T, Key extends keyof T>(\n  name: Key,\n  ref: RefObject<T | undefined>,\n  value: T[Key] | undefined\n) {\n  useEffect(() => {\n    if (!ref.current || value === undefined) return;\n    const el = ref.current;\n    el[name] = value;\n  }, [name, value, ref]);\n}\n\n/**\n * Hook for binding event listeners to the player.\n */\nfunction useEvent(\n  event: string,\n  ref: MutableRefObject<StreamPlayerApi | undefined>,\n  callback: EventListener = noop\n) {\n  useEffect(() => {\n    if (!ref.current) return;\n    const el = ref.current;\n    el.addEventListener(event, callback);\n    // clean up\n    return () => el.removeEventListener(event, callback);\n  }, [callback, event, ref]);\n}\n\n// Declaring a single noop function that will retain object\n// identity across renders and prevent unnecessary rebinding\n// when no callback is provided\nconst noop = () => {};\n\nexport const Stream: FC<StreamProps> = (props) => {\n  const streamSdk = useStreamSDK();\n  return streamSdk ? <StreamEmbed {...props} /> : null;\n};\n\nconst responsiveIframeStyles: CSSProperties = {\n  position: \"absolute\",\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  height: \"100%\",\n  width: \"100%\",\n};\n\nconst Container: FC<{\n  responsive: boolean;\n  videoDimensions: VideoDimensions;\n  className?: string;\n}> = ({ children, responsive, className, videoDimensions }) => {\n  const { videoHeight, videoWidth } = videoDimensions;\n  const responsiveStyles: CSSProperties = useMemo<CSSProperties>(\n    () => ({\n      position: \"relative\",\n      paddingTop:\n        videoWidth > 0 ? `${(videoHeight / videoWidth) * 100}%` : undefined,\n    }),\n    [videoWidth, videoHeight]\n  );\n  return (\n    <div\n      className={className}\n      style={responsive ? responsiveStyles : undefined}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport const StreamEmbed: FC<StreamProps> = ({\n  src,\n  customerCode,\n  adUrl,\n  controls = false,\n  muted = false,\n  autoplay = false,\n  loop = false,\n  preload = \"metadata\",\n  primaryColor,\n  letterboxColor,\n  defaultTextTrack,\n  height,\n  width,\n  poster,\n  currentTime,\n  volume = 1,\n  playbackRate = 1,\n  startTime,\n  streamRef,\n  responsive = true,\n  className,\n  title,\n  onAbort,\n  onCanPlay,\n  onCanPlayThrough,\n  onDurationChange,\n  onEnded,\n  onError,\n  onLoadedData,\n  onLoadedMetaData,\n  onLoadStart,\n  onPause,\n  onPlay,\n  onPlaying,\n  onProgress,\n  onRateChange,\n  onResize,\n  onSeeked,\n  onSeeking,\n  onStalled,\n  onSuspend,\n  onTimeUpdate,\n  onVolumeChange,\n  onWaiting,\n  onStreamAdStart,\n  onStreamAdEnd,\n  onStreamAdTimeout,\n}) => {\n  const internalRef = useRef<StreamPlayerApi>();\n  const ref = streamRef ?? internalRef;\n\n  const [videoDimensions, setVideoDimensions] = useState({\n    videoHeight: 0,\n    videoWidth: 0,\n  });\n\n  const iframeRef = useRef<HTMLIFrameElement>(null);\n\n  const computedSrc = useIframeSrc(src, {\n    customerCode,\n    muted,\n    preload,\n    loop,\n    autoplay,\n    controls,\n    poster,\n    primaryColor,\n    letterboxColor,\n    adUrl,\n    defaultTextTrack,\n    startTime,\n  });\n\n  // While it's easier for most consumers to simply provide the video UID\n  // or signed token and have us compute the iframe's src for them, some\n  // consumers may need to manually specify the iframe's src.\n  const iframeSrc = validSrcUrl(src) ? src : computedSrc;\n\n  useProperty(\"muted\", ref, muted);\n  useProperty(\"controls\", ref, controls);\n  useProperty(\"src\", ref, src);\n  useProperty(\"autoplay\", ref, autoplay);\n  useProperty(\"currentTime\", ref, currentTime);\n  useProperty(\"loop\", ref, loop);\n  useProperty(\"preload\", ref, preload);\n  useProperty(\"primaryColor\", ref, primaryColor);\n  useProperty(\"letterboxColor\", ref, letterboxColor);\n  useProperty(\"volume\", ref, volume);\n  useProperty(\"playbackRate\", ref, playbackRate);\n\n  // instantiate API after properties are bound because we want undefined\n  // values to be set before defining the properties\n  useEffect(() => {\n    const Stream = safelyAccessStreamSDK();\n    if (iframeRef.current && Stream) {\n      const api = Stream(iframeRef.current);\n      ref.current = api;\n      const { videoHeight, videoWidth } = api;\n      if (videoHeight && videoWidth)\n        setVideoDimensions({ videoHeight, videoWidth });\n    }\n  }, []);\n\n  // bind events\n  useEvent(\"abort\", ref, onAbort);\n  useEvent(\"canplay\", ref, onCanPlay);\n  useEvent(\"canplaythrough\", ref, onCanPlayThrough);\n  useEvent(\"durationchange\", ref, onDurationChange);\n  useEvent(\"ended\", ref, onEnded);\n  useEvent(\"error\", ref, onError);\n  useEvent(\"loadeddata\", ref, onLoadedData);\n  useEvent(\"loadedmetadata\", ref, onLoadedMetaData);\n  useEvent(\"loadstart\", ref, onLoadStart);\n  useEvent(\"pause\", ref, onPause);\n  useEvent(\"play\", ref, onPlay);\n  useEvent(\"playing\", ref, onPlaying);\n  useEvent(\"progress\", ref, onProgress);\n  useEvent(\"ratechange\", ref, onRateChange);\n  useEvent(\"seeked\", ref, onSeeked);\n  useEvent(\"seeking\", ref, onSeeking);\n  useEvent(\"stalled\", ref, onStalled);\n  useEvent(\"suspend\", ref, onSuspend);\n  useEvent(\"timeupdate\", ref, onTimeUpdate);\n  useEvent(\"volumechange\", ref, onVolumeChange);\n  useEvent(\"waiting\", ref, onWaiting);\n  useEvent(\"stream-adstart\", ref, onStreamAdStart);\n  useEvent(\"stream-adend\", ref, onStreamAdEnd);\n  useEvent(\"stream-adtimeout\", ref, onStreamAdTimeout);\n  useEvent(\"resize\", ref, (e) => {\n    if (ref.current) {\n      const { videoHeight, videoWidth } = ref.current;\n      setVideoDimensions({ videoHeight, videoWidth });\n      onResize && onResize(e);\n    }\n  });\n\n  return (\n    <Container\n      className={className}\n      responsive={responsive}\n      videoDimensions={videoDimensions}\n    >\n      <iframe\n        ref={iframeRef}\n        src={iframeSrc}\n        title={title}\n        style={responsive ? responsiveIframeStyles : undefined}\n        frameBorder={0}\n        height={height}\n        width={width}\n        allow=\"accelerometer; gyroscope; autoplay; encrypted-media; picture-in-picture;\"\n        allowFullScreen\n      />\n    </Container>\n  );\n};\n","import { useMemo } from \"react\";\nimport { Preload } from \"./types\";\n\ninterface IframeSrcOptions {\n  muted?: boolean;\n  loop?: boolean;\n  autoplay?: boolean;\n  controls?: boolean;\n  poster?: string;\n  primaryColor?: string;\n  letterboxColor?: string;\n  startTime?: string | number;\n  adUrl?: string;\n  defaultTextTrack?: string;\n  preload?: Preload;\n  customerCode?: string;\n}\n\nexport function useIframeSrc(\n  src: string,\n  {\n    muted,\n    preload,\n    loop,\n    autoplay,\n    controls,\n    poster,\n    primaryColor,\n    letterboxColor,\n    adUrl,\n    startTime,\n    defaultTextTrack,\n    customerCode,\n  }: IframeSrcOptions\n) {\n  const paramString = [\n    poster && `poster=${encodeURIComponent(poster)}`,\n    adUrl && `ad-url=${encodeURIComponent(adUrl)}`,\n    defaultTextTrack &&\n      `defaultTextTrack=${encodeURIComponent(defaultTextTrack)}`,\n    primaryColor && `primaryColor=${encodeURIComponent(primaryColor)}`,\n    letterboxColor && `letterboxColor=${encodeURIComponent(letterboxColor)}`,\n    startTime && `startTime=${startTime}`,\n    muted && \"muted=true\",\n    preload && `preload=${preload}`,\n    loop && \"loop=true\",\n    autoplay && \"autoplay=true\",\n    !controls && \"controls=false\",\n  ]\n    .filter(Boolean)\n    .join(\"&\");\n\n  const iframeSrc = useMemo(\n    () =>\n      customerCode\n        ? `https://customer-${customerCode}.cloudflarestream.com/${src}/iframe?${paramString}`\n        : `https://iframe.cloudflarestream.com/${src}?${paramString}`,\n    // we intentionally do NOT include paramString here because we want\n    // to avoid changing the URL when these options change. Changes to\n    // these options will instead be handled separately via the SDK.\n    []\n  );\n\n  return iframeSrc;\n}\n","export function validSrcUrl(str: string) {\n  try {\n    const url = new URL(str);\n    return (\n      url.hostname.endsWith(\"videodelivery.net\") ||\n      url.hostname.endsWith(\"cloudflarestream.com\")\n    );\n  } catch {\n    return false;\n  }\n}\n"],"names":["sdkScriptLocation","safelyAccessStreamSDK","window","Stream","useStreamSDK","useState","streamSdk","setStreamSdk","useEffect","existingScript","document","querySelector","script","createElement","addEventListener","src","head","appendChild","useProperty","name","ref","value","current","undefined","useEvent","event","callback","noop","el","removeEventListener","responsiveIframeStyles","position","top","left","right","bottom","height","width","Container","children","responsive","className","videoDimensions","videoHeight","videoWidth","responsiveStyles","useMemo","paddingTop","React","style","StreamEmbed","customerCode","adUrl","controls","muted","autoplay","loop","preload","primaryColor","letterboxColor","defaultTextTrack","poster","currentTime","volume","playbackRate","startTime","streamRef","title","onAbort","onCanPlay","onCanPlayThrough","onDurationChange","onEnded","onError","onLoadedData","onLoadedMetaData","onLoadStart","onPause","onPlay","onPlaying","onProgress","onRateChange","onResize","onSeeked","onSeeking","onStalled","onSuspend","onTimeUpdate","onVolumeChange","onWaiting","onStreamAdStart","onStreamAdEnd","onStreamAdTimeout","internalRef","useRef","setVideoDimensions","iframeRef","computedSrc","paramString","encodeURIComponent","filter","Boolean","join","useIframeSrc","iframeSrc","str","url","URL","hostname","endsWith","validSrcUrl","api","e","frameBorder","allow","allowFullScreen","props"],"mappings":"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"}